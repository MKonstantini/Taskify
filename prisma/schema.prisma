generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String               @id @default(uuid())
  userName            String?              @db.VarChar
  avatarUrl           String?              @db.VarChar  
  Activity            Activity[]
  OrganizationToUser  OrganizationToUser[]
  Subscription        Subscription[]

  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
}

model Organization {
  id                 String               @id @default(uuid())
  name               String?              @db.VarChar
  imgUrl             String?              @db.VarChar
  Activity           Activity[]
  Board              Board[]
  OrganizationToUser OrganizationToUser[]
  Subscription       Subscription[]

  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
}

model OrganizationToUser {
  userId         String
  organizationId String
  Organization   Organization @relation(fields: [organizationId], references: [id])
  User           User         @relation(fields: [userId], references: [id])

  @@id([userId, organizationId])

  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
}

model Activity {
  id              String       @id @default(uuid())
  organizationId  String
  userId          String
  detail          String?      @db.VarChar
  cardId          String?
  Card            Card?        @relation(fields: [cardId], references: [id])
  Organization    Organization @relation(fields: [organizationId], references: [id])
  User            User         @relation(fields: [userId], references: [id])

  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
}

model Board {
  id              String        @id @default(uuid())
  organizationId  String?
  name            String?       @db.VarChar
  imgUrl          String?        @db.VarChar
  Organization    Organization? @relation(fields: [organizationId], references: [id])
  Card            Card[]

  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
}

model Card {
  id         String     @id @default(uuid())
  boardId    String
  name       String     @db.VarChar
  Activity   Activity[]
  Board      Board      @relation(fields: [boardId], references: [id])
  Task       Task[]

  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
}

model Subscription {
  userId          String
  organizationId  String
  Organization    Organization @relation(fields: [organizationId], references: [id])
  User            User         @relation(fields: [userId], references: [id])

  @@id([userId, organizationId])

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Task {
  id          String   @id @default(uuid())
  cardId      String
  name        String?  @db.VarChar
  description String?  @db.VarChar
  Card        Card     @relation(fields: [cardId], references: [id])

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
